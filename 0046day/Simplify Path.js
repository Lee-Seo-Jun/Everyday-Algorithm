/* 
유닉스 코드 기준에 맞는 디렉토리명을 반환한다.

매개변수로 잘못 입력된 디렉토리명이 스트링 형태로 들어온다.
모든 경로는 단일 /(슬래시) 로 시작하며,
두 디렉토리 사이는 단일 /(슬래시) 로 구분한다.
끝에 슬래시(/) 가 오지 않는다.
. 은 현재 디렉토리를 의미하며 .. 은 상위 디렉토리를 의미한다.
디렉터리를 간결화 하기 위하여 . 과 ..을 제거하고 오직 타겟 디렉토리로 이동하기 위해 거치는 경로만 넣은 디렉터리를 반환한다.
단, ... 으로 마침표가 3개 연속 찍힌 것은 파일명으로 간주한다.

위 규칙을 모두 지킨 simplified 된 디렉터리를 스트링으로 반환한다.

! 문제 아디이어) 단일 슬래시로 통일하고, 마침표 제거 규칙이 일관되지 않기 때문에 RE로 풀기엔 적합하지 않다.

1. 슬래시 기준으로 스플릿 하면 제일 앞 뒤에 있는 슬래시가 삭제되고, 각 디렉터리들이 슬래시 기준으로 분할된다.
2. 분할된 배열 원소를 각각 비교하여, 조건을 통과하면 stack에 담는다.
3. .(마침표) 1개 이거나
(현재 디렉터리라는 의미이므로 없어도 도착 디렉터리가 같음),
 빈 문자열( ) 인 경우(디렉터리 명이 없다는 의미이므로)
 contitnue하고,

3. 원소가 .. 인 경우 file/../ => file 로 간소시키기 위해 stack.pop()

4. 3,4 조건을 모두 통과하면 그 원소를 stack에 담는다.

5.  "/" + stack.join('/') 를 반환한다.
*/

var simplifyPath = function(path) {
    let stack = [];
    path = path.split('/');

    
    for (let i=0;i<path.length;i++) {
        if (path[i]=='.' || path[i]=='') continue;
        if (path[i]=='..') stack.pop();
        else stack.push(path[i]);
    }
    
    return '/'+stack.join('/');
};

console.log(simplifyPath("/home/../foo/"));